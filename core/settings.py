'''
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
'''

import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False), )

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['*'])

ADMINS = [x.split(':') for x in env.list('DJANGO_ADMINS', default=[])]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'constance.backends.database',
    'constance',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'modeltranslation',
    'django_extensions',
    'tmc.apps.AddressConfig',
    'django_countries',
    'tmc.apps.TMCConfig',
    'django_q',
    'phonenumber_field',
    'import_export',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "sesame.middleware.AuthenticationMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {'default': env.db('DATABASE_URL', default='sqlite:///db.sqlite')}

CACHES = {
    # read os.environ['CACHE_URL'] and raises ImproperlyConfigured exception if not found
    'default': env.cache(default='dummycache://'),
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "sesame.backends.ModelBackend",
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = env.str('LANGUAGE_CODE', default='en-us')

gettext = lambda s: s

LANGUAGES = (
    ('de-ch', gettext('German')),
    ('en', gettext('English')),
    ('fr-ch', gettext('French')),
    ('it-ch', gettext('Italian')),
    ('es', gettext('Spanish')),
)

TIME_ZONE = env.str('TIME_ZONE', default='UTC')

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [BASE_DIR / 'locale']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

WHITENOISE_INDEX_FILE = True

# Media files

MEDIA_ROOT = '/media'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email

EMAIL_CONFIG = env.email_url('EMAIL_URL', default='smtp://user@:password@localhost:25')

vars().update(EMAIL_CONFIG)

if not DEBUG:
    EMAIL_BACKEND = 'django_q_email.backends.DjangoQBackend'

DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='mail@localhost')

EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
# Run behind proxy for tls

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

GOOGLE_API_KEY = env.str("GOOGLE_API_KEY", '')

CRISPY_TEMPLATE_PACK = 'bootstrap4'

PHONENUMBER_DEFAULT_REGION = 'CH'

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'
CONSTANCE_DATABASE_CACHE_BACKEND = 'default'

CONSTANCE_CONFIG = {
    'WELCOME_SUBJECT': (
        'Your application for the Muri Competition has been received!',
        'subject of mail that participants receive when siging up.',
    ),
    'WELCOME_TEXT': ("""Dear {inscription.given_name},

We received your application for the Muri Competition. You can review your application here and\
update your information if necessary: {auth_link}

With this link you can also upload the required recordings, instructions on how to do that, can be found here:

Best wishes and good luck

The TMC Team!""", 'content of e-mail sent to participants.'),
    'AUTH_SUBJECT': ('Your TMC login | Dein TMC Zugang', 'subject of e-mail with login link'),
    'AUTH_TEXT': ("""**Für Deutsch: siehe unten**

Dear {inscription.first_name},

Click on this link to login to your TMC account: {auth_link}.\nIf did not try login, please ignore this message.

Do not forward this message, as anyone with the link above will be able to access your personal account and change your details.

Best wishes, The TMC Team.

***********************

Liebe*r {inscription.first_name},

Klicke auf diesen Link um dich beim TMC Portal anzumelden: {auth_link}\nWenn du dich nicht anmelden wolltest, kannst du diese Nachricht ignorieren.

Leite diese Nachricht niemandem weiter, mit dem obigen Link können deine persönlichen Daten eingesehen und bearbeitet werden.

Liebe Grüsse, das TMC Team
""", 'text sent to people login in'),
    'HOST_SIGNUP_TEXT': ("""Hallo {inscription.given_name} {inscription.surname}

Danke für deine Anmeldung als Gastfamilie für The Muri Competition. Du kannst deine Angaben jederzeit mit diesem Link anpassen: {auth_link}.\n\n Liebe Grüsse, das TMC Team""",
                         'nachricht für Gastfamlien'),
    'HOST_SIGNUP_SUBJECT': (
        "Anmeldung als Gastfamilie TMC",
        "Betreff für Gastfamilie",
    ),
    'JURY_SIGNUP_TEXT':
    ("Registration Jury TMC", "text sent to jury members after account is created"),
    'JURY_SIGNUP_SUBJECT':
    ("Hi {inscription.given_name}\n\nYou receive this message, because you are now registered as a member of the jury for the Muri Competition. You can access your account and upate your info using this link: {auth_link}\n\nBest wishes, the TMC Team",
     'subject of mail sent to new jury members'),
    'HELPER_SIGNUP_SUBJECT':
    ("Anmeldung als Helfer beim TMC", 'subject of mail sent to new helpers'),
    'HELPER_SIGNUP_TEXT':
    ("Hallo {inscription.given_name}\nDu erhältst dieses E-Mail, da du dich als Helfer für den TMC angemeldet hast. Du kannst deine Informationen jederzeit hier einsehen und bearbeiten: {auth_link}\n\nLiebe Grüsse, das TMC Team",
     'text sent to helpers after signup'),
}

Q_CLUSTER = {
    'name': 'DjangORM',
    'workers': 8,  # Workers do mostly network stuff
    'timeout': 2 * 60 * 60,
    'retry': 3 * 60 * 60,
    'queue_limit': 5000,
    'bulk': 10,
    'orm': 'default'
}

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

AWS_S3_ACCESS_KEY_ID = env('S3_ACCESS_KEY_ID', default='')

AWS_S3_SECRET_ACCESS_KEY = env('S3_SECRET_ACCESS_KEY', default='')
AWS_STORAGE_BUCKET_NAME = env('S3_BUCKET_NAME', default='')
AWS_S3_REGION_NAME = env('S3_REGION_NAME', default='')
AWS_S3_ENDPOINT_URL = env('S3_ENDPOINT_URL', default='')

DJANGO_DRF_FILEPOND_UPLOAD_TMP = '/uploads/tmp/'
DJANGO_DRF_FILEPOND_FILE_STORE_PATH = '/uploads/final'
DJANGO_DRF_FILEPOND_ALLOW_EXTERNAL_UPLOAD_DIR = True

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
}

LOGIN_URL = 'tmc:login'

AWS_S3_FILE_OVERWRITE = False
